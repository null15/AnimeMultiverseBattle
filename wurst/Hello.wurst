package Hello

import UnitIds
import EntitySystem
import ClosureTimers
import objectIDs
import ClosureEvents

// Current TimeStop good implemented so far.
// Question is, do we keep relative/absolute pauses? I was thinking, maybe they useful for target animation spells, that are long and use pause
// But we pause in the code anyway, does it help to use this pause system? Have to think on it.

init
	nullTimer() ->
		let start = vec2(1000., 1000.)
		let first = Unit.create(players[PLAYER_NEUTRAL_AGGRESSIVE], UnitIds.footman, start)
		let id = first.getId()
		let same = Unit.fromId(id)
		if same != null
			same.setPos(start + vec2(0., 128.))
		for i = 1 to 4
			Unit.create(players[PLAYER_NEUTRAL_AGGRESSIVE], UnitIds.footman, start + vec2(i * 128., 0.))

		Unit.create(players[1], NAGATO_UZUMAKI, vec2(0, 0))..setLevel(10, false)
		Unit.create(players[2], ALL_MIGHT, vec2(0, 0))..setLevel(10, false)
		Unit.create(players[3], NAGATO_UZUMAKI, vec2(0, 0))..setLevel(10, false)
		Unit.create(players[4], NAGATO_UZUMAKI_CHAKRA_ROD, vec2(0, 0))..setLevel(10, false)
		Unit.create(players[7], NAGATO_UZUMAKI, vec2(-700, -700))..setLevel(10, false).setMoveSpeed(0)
		players[1].setPlayerAlliance(players[0], ALLIANCE_SHARED_CONTROL, true)
		players[2].setPlayerAlliance(players[0], ALLIANCE_SHARED_CONTROL, true)
		players[3].setPlayerAlliance(players[0], ALLIANCE_SHARED_CONTROL, true)
		players[4].setPlayerAlliance(players[0], ALLIANCE_SHARED_CONTROL, true)
		players[5].setPlayerAlliance(players[0], ALLIANCE_SHARED_CONTROL, true)

		CreateFogModifierRect(players[0], FOG_OF_WAR_VISIBLE, GetPlayableMapRect(), false, false).start()

	EventListener.add(EVENT_PLAYER_CHAT_FILTER) -> 
		if EventData.getChatMessage() == "revive"
			Unit.getHero(players[0].getId()).revive(vec2(0, 0), true)
		else if EventData.getChatMessage() == "stop"
			players[0].disableUserControl()
			doAfter(5) -> 
				players[0].enableUserControl()
	