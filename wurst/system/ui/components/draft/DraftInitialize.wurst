package DraftInitialize

import DraftAPI
import TableLayout
import TableLayoutExt
import GridTableWrapper
import ClosureTimers
import DraftHeroData

function setupCategoryButtons()
    string array categoryName
    categoryName[1] = "Strength"
    categoryName[2] = "Agility"
    categoryName[3] = "Intelligence"
    categoryName[4] = "Bruiser"
    categoryName[5] = "Carry"
    categoryName[6] = "Support"
    categoryName[7] = "Melee"
    categoryName[8] = "Range"

    for i = 1 to MAX_CATEGORIES
        categoryBtns[i] = btn(categoryName[i])
            ..setWidth(categoryPageSize)
            ..setHeight(categoryPageSize)

function setupPageButtons()
    for i = 1 to MAX_PAGES
        pageBtns[i] = btn(i.toString())
            ..setWidth(categoryPageSize)
            ..setHeight(categoryPageSize)

function draftScreen()
    hideOriginFrames()
    getFrame("ConsoleUIBackdrop", 0).setSize(0, 0.0001)

    // Create parent frame to bypass 4:3 restriction
    let parent = createFrame("FRAME", "DraftParent", getFrame("ConsoleUIBackdrop", 0), "", 0)
    defaultFrameParent = parent

    // Create hero objects to display (its the hero icons on Draft)
    defineHeroes()
    buildHeroButtons()
    setupHeroButtons()

    // Timer Frame
    let timerTable = new TableLayout(0.1, 0.05)
        ..row()..add(p("Timer"))..growX()

    // Category and Paged buttons Table
    let categoryPageButtonsTable = new TableLayout(0.2, 0.07)
        ..row()
        ..add(categoryBtns[1])..add(categoryBtns[2])..add(categoryBtns[3])..add(categoryBtns[4])
        ..add(categoryBtns[5])..add(categoryBtns[6])..add(categoryBtns[7])..add(categoryBtns[8])
        ..add(h1(""))..growX()
        ..add(pageBtns[1])..add(pageBtns[2])..add(pageBtns[3])

    // Team 1 picked heroes Table
    let team1PickedTable = new TableLayout(0.125, 0.5)
        ..row()..add(p("Header L"))..growX()

    // Team 2 picked heroes table
    let team2PickedTable = new TableLayout(0.125, 0.5)
        ..row()..add(p("Header R"))..growX()

    // Grid displaying the Hero Icons
    heroGrid = new GridCell(0.4, 0.25, 10, heroIconSize, heroIconSize, 0.006)

    // Main Table that displays Category and Page buttons, and the Hero Icons
    let mainTable = new TableLayout(0.8, 0.5)
        ..row()..center()
        ..add(categoryPageButtonsTable.createFramedContainer(parent))..growX()
        ..row()
        ..add(heroGrid.createFramedContainer(parent))..growX()

    // Table containing all the Draft Tables
    let rootTable = new TableLayout(1.0, 0.6)
        ..row()..center()
        ..add(timerTable.createFramedContainer(parent))..padBot(0.005)
        ..row()..center()
        ..add(team1PickedTable.createFramedContainer(parent))
        ..add(mainTable.createFramedContainer(parent))..growX()
        ..add(team2PickedTable.createFramedContainer(parent))

    // Root frame of the Root Table
    let rootFrame = rootTable.createFrame()
        ..clearAllPoints()
        ..setAbsPoint(FRAMEPOINT_CENTER, 0.4, 0.3)
    rootTable.applyToCascade(rootFrame)

    // Create the onClick Events for Category and Page buttons
    wireCategoryButtons()
    wirePageButtons()

    // Investigate this, and re-code it potentially:
    let pidLocal = GetPlayerId(GetLocalPlayer())
    let st = getOrCreateState(pidLocal)
    st.currentPage = 1
    shownNow.clear()
    refreshGrid(pidLocal)
    buildHeroButtons()
    // To here

    // Reset defaultFrameParent back to the GAME_UI
    defaultFrameParent = GAME_UI

init
    setupCategoryButtons()
    setupPageButtons()

    // Slight delay before creating draft UI, avoids any frame issues since creating frames at init can cause bugs
    doAfter(0.1) ->
        draftScreen()